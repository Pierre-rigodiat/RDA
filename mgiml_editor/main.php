<?php 
	session_start();
	
	require_once 'lib/StringFunctions.php';
?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Form Generator 0.1</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta http-equiv="Author" content="Alexander Bell" />
<meta http-equiv="Copyright" content="2011 Infosoft International Inc" />
<meta http-equiv="Expires" content="0" />
<meta http-equiv="Cache-control" content="no-cache">
<meta name="Robots" content="all" />
<meta name="Distribution" content="global" />

<link rel="stylesheet" href="css/popup.css" />

<script src="http://code.jquery.com/jquery-latest.js"></script>
<script src="js/util.js"></script>
<script src="js/popup.js"></script>
</head>
<body>
<h1>Form configuration</h1>
<?php
$attr=null;

if(isset($_POST['elementId']) )
{
	//echo 'Root: '.$_SESSION['rootElement'].'<br/>';
	
	echo 'Element to change: '.$_POST['elementId'].'<br/>';
	$attr=$_SESSION['elementList'][$_POST['elementId']]['attributes'];
	
	//echo 'Former element = ';
	if(isset($_POST['unbounded']) && $_POST['unbounded']=="on") $_POST['max']="unbounded";
	
	print_r($attr);
	echo '<br/>';
	print_r($_POST);
	
	echo '<br/>';
	
	if(isset($_POST['min']))
	{
		if((isset($attr['MINOCCURS']) && $_POST['min']!=$attr['MINOCCURS']) || (!isset($attr['MINOCCURS']) && $_POST['min']!=1))
		{
			if($_POST['min']==1)
			{
				echo 'Min needs to be removed<br/>';
				unset($attr['MINOCCURS']);
				
			}
			else
			{
				echo 'Min needs to be changed<br/>';
				$attr['MINOCCURS'] = $_POST['min'];
			}
		}
		else
		{
			echo 'Min does not need to be changed<br/>';
		}
	}
	
	if(isset($_POST['max']))
	{
		if((isset($attr['MAXOCCURS']) && $_POST['max']!=$attr['MAXOCCURS']) || (!isset($attr['MAXOCCURS']) && $_POST['max']!=1))
		{
			if($_POST['max']==1)
			{
				echo 'Max needs to be removed<br/>';
				unset($attr['MAXOCCURS']);
			}
			else
			{
				echo 'Max needs to be changed<br/>';
				$attr['MAXOCCURS'] = $_POST['max'];
				
			}
		}
		else
		{
			echo 'Max does not need to be changed<br/>';
		}
	}
	
	if(isset($_POST['type']))
	{
		switch ($_POST['type'])
		{
			// XXX Use global variables (namespace, etc.)
			case 'str':
				$_POST['type']="xsd:string";
				break;
			case 'int':
				$_POST['type']="xsd:integer";
				break;
			case 'dbl':
				$_POST['type']="xsd:double";
				break;
			default:
				break;
			
		}
		
		if(startsWith($attr['TYPE'], "xsd:"))
		{
			if($attr['TYPE']!=$_POST['type'])
			{
				echo 'Type needs to be changed<br/>';
				$attr['TYPE'] = $_POST['type'];
			}
			else
			{
				echo 'Type does not need to be changed<br/>';
			}
		}		
	}
	
	if(isset($_POST['ai']) && $_POST['ai']=="on" && !(isset($attr['AI']) && $attr['AI']=="on"))
	{
		echo "Set autogenerated on<br/>";
		$attr = $attr + array('AI' => 'on');
	}
	else if((!isset($_POST['ai']) || $_POST['ai']!="on") && isset($attr['AI']) && $attr['AI']=="on")
	{
		echo "Set autogenerated off<br/>";
		unset($attr['AI']);
	}
	
	$_SESSION['elementList'][$_POST['elementId']]['attributes'] = $attr;
	
	print_r($attr);
	echo '<br/>';
	
	echo '<hr/>';
	
}


if(isset($_SESSION['elementList']))
{
	//echo 'Element list is set<br/>';
}


require_once 'classes/XsdParser.php';

/*if(isset($_GET['debug']))
{
	echo 'DEBUG : ON<br/>';
	echo '-------<br/>';
}*/

$start = (float) array_sum(explode(' ',microtime()));

$xsd = "files/mgiml_a.xsd";
$xsd = "files/mgiml_light.xsd";
$xsd = "files/mgiml_ultra_light.xsd";

// We begin to parse the file
// TODO Could we use ajax to do that ?
$xsd_parser = new XsdParser($xsd);

if(isset($attr) && $attr!=null)
{
	$xsd_parser->setElementList($_SESSION['elementList']);
	$xsd_parser->setRoot($_SESSION['rootElement']);
	$xsd_parser->setNamespace($_SESSION['namespace']);
	
	$xsd_parser->displayForm();
}
else
{
	$xsd_parser->buildForm();
}
?>
<a href="step2.php">Build the form</a>
<?php 
echo '<hr/>';
print_r($xsd_parser->getElementList());


$_SESSION['elementList']=$xsd_parser->getElementList();
$_SESSION['rootElement']=$xsd_parser->getRoot();
$_SESSION['namespace']=$xsd_parser->getNamespace();

$end = (float) array_sum(explode(' ',microtime()));

echo '<hr/>';
echo "Processing time: <b>".sprintf("%.4f", ($end-$start))."</b> seconds<br/>";
echo "Allocating memory: <b>".memory_get_usage().'</b> bytes'

?>
<div id="edition_popup" class="divModalDialog">
<?php
	require_once 'inc/xsd_config_form.inc.php';
?>
</div>
</body>